AUTOMATED:
+ Gather most recent nsrl or baseline md5deep list and index
  + hfind -i <nsrl-md5 OR md5sum> <hashlist>
+ download 3rd party tools

- automatic imageinfo parsing for memory image?

- targeted artifact acquisition & processing
  + plaso / log2timeline.py
  + fls + memory timeline
  + disk only
  + memory only timeline
  + image_export.py - cold disk image
  - image_export.py - hot mounted disk

- Prep Evidence / Data Reduction
  + Carve EXE and DLL files from disk using foremost
    + unallocated
    + slack
  + Carve EXE and DLL files from memory using vol.py
    + vol.py dumpfiles -n -i -r \\.exe
    + vol.py dumpfiles -n -i -r \\.dll
    + vol.py dlldump
  + Strings output for disk 
  + Strings output for memory
  + VSS
  + sorter - compare nsrl to disk image --> carve + sort all files (excluding nsrl)
  + tsk_recover
  - hash aggregate files - needs tweaking
  - Compare carved hashes to good hash list (sorter does not do this for files that have no metadata or filename data)

- AV Checks
- IOC Search
- Automated Memory Analysis
  + malprocfind
  + malfind
  - etc: need to browse vol.py -h menu for ideas

SEMI-AUTOMATED:
- Evidence of Persistence
  - autoruns - windows only - https://bytehacks.com/2018-07-02-CMD-Cheat-Sheet/#autoruns
    - parse programmatically?
- Packing / Entropy Check
  + densityscout - linux
  - pescan - linux & windows
  - sigcheck - windows only
- Logs
- Super Timeline Analysis
- Prefetch Analysis
  + extract from disk
  + extract from memory
  - compare with known prefetch hashlist
  - search for execution out of temp dir

MANUAL:
- By-Hand Memory Analysis
- By-Hand Third-Party Hash Lookups
  - Recorded Future API
  - WildFire API
  - VirusTotal API

- MFT Anomalies
  - MFT outlier hunting using scatter plot
- File Time Anomalies
  - analyzeMFT.py
    - NTFS artifact comparison ($STDINFO / $FILENAME)
    - search for ".000" nanosecond anomaly
  - logfile journal and USN journal parsing
- Journal Parsing
  - $LogFile tools
    - LogFileParser
    - NTFS LogFile Parser
  - $UsnJrnl tools
    - jp
    - USN-Journal-Parser
  - Combined tools
    - ntfs-linker
    - Advanced NTFS Journal Parser (ANJP)
    - l2t/plaso?
- INDX Slack Parsing
  - Wisp
  - INDXParse.py

COMPLEMENTARY SKILLS:
- convert .E01 to .vmdk using xmount or qemu-img (https://forensicswiki.org/wiki/Virtual_machine)
